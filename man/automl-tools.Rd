% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auto-ml.R
\name{rank_automl}
\alias{rank_automl}
\alias{rank_automl.default}
\alias{rank_automl.workflow}
\alias{rank_automl.model_fit}
\alias{rank_automl.H2OAutoML}
\alias{tidy._H2OAutoML}
\alias{print.automl_fit}
\alias{autoplot.H2OAutoML}
\title{Tools for working with h2o auto_ml results}
\usage{
rank_automl(object, ...)

\method{rank_automl}{default}(object, ...)

\method{rank_automl}{workflow}(object, n = NULL)

\method{rank_automl}{model_fit}(object, n = NULL)

\method{rank_automl}{H2OAutoML}(object, n = NULL)

\method{tidy}{`_H2OAutoML`}(object, keep_model = TRUE, ...)

\method{print}{automl_fit}(object, ...)

\method{autoplot}{H2OAutoML}(object, type = c("rank", "metric"), metric = NULL, ...)
}
\arguments{
\item{object}{A \code{model_fit} or fitted \code{workflow} object.}

\item{n}{The number of individual models to extract from \code{auto_ml} results,
ranked descendingly by performance. Default to all.}

\item{keep_model}{A logical value for whether individual models by
\code{auto_ml()} should be retrieved from the server. Defaults to \code{TRUE}.}

\item{type}{A single character of choices of "rank" (plotting average ranking
of algorithms within metrics) or "metric" (plotting average value of metrics).}

\item{metric}{A character vector or NULL for which metric to plot.
By default, all metrics will be shown via facets.}
}
\value{
A \code{\link[tibble:tibble]{tibble::tibble()}} cross validation performances.
}
\description{
\code{rank_automl()} returns a tibble ranking cross validation performances
of different algorithms on a metric. \code{tidy()} returns the leaderboard
in tidy format.
}
\details{
When \code{keep_model} is \code{TRUE}, \code{tidy()} adds a list column where each
component is a "fake" parsnip \code{model_fit} object constructed
from the h2o model. These objects are meant to be used for prediction only,
i.e., \code{predict(object, new_data = data)}, and should not be used as a
regular parsnip model.
}
\examples{
if (h2o_running()) {
  mod <- auto_ml() \%>\%
    set_engine("h2o", max_runtime_secs = 10) \%>\%
    set_mode("regression") \%>\%
    fit(mpg ~ ., data = mtcars)

  tidy(mod)
  rank_automl(mod)
}

}
